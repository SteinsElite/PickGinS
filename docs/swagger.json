{
    "swagger": "2.0",
    "info": {
        "description": "API to interact with the pick finance backend",
        "title": "pick finance api",
        "contact": {},
        "version": "0.0.1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/keyword_hash": {
            "get": {
                "description": "the keyword hash is sign by the account to make sure that the account is accessed",
                "produces": [
                    "application/json"
                ],
                "summary": "get the keywordHash to sign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the address of the keyword bind to",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "keyword hash"
                    },
                    "400": {
                        "description": "invalid param"
                    },
                    "403": {
                        "description": "not authorized"
                    }
                }
            }
        },
        "/auth/{address}/add_publisher": {
            "post": {
                "description": "add new publisher who is ability to publish new notification(",
                "produces": [
                    "application/json"
                ],
                "summary": "add new publisher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the publisher address is login now",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature of the publisher address",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the address of new publisher to add",
                        "name": "new_publisher",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the keyword been used to sign",
                        "name": "keyword",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/chart/profit": {
            "get": {
                "description": "gets the profit in a time range",
                "produces": [
                    "application/json"
                ],
                "summary": "get the phased profit info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the duration to query-{7D,1M,1Y}",
                        "name": "range",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the [(timestamp,profit)] in the time range"
                    }
                }
            }
        },
        "/chart/ratio": {
            "get": {
                "description": "gets the ratio of each asset info",
                "produces": [
                    "application/json"
                ],
                "summary": "get the ratio info",
                "responses": {
                    "200": {
                        "description": "amount of each asset in usd"
                    }
                }
            }
        },
        "/chart/volume": {
            "get": {
                "description": "gets the volume of each asset in usd, and the start of the query timestamp",
                "produces": [
                    "application/json"
                ],
                "summary": "get the total volume info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the duration to query-{7D,1M,1Y}",
                        "name": "range",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the {startTime: ..., volume: ...} in the time range"
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "description": "obtains the specific notification by the tag",
                "produces": [
                    "application/json"
                ],
                "summary": "get notification info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tag of the notification-{QuotaUpdate,Activity,Weekly}, if not specify, get all the category",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "index of page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size of each page",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of notification"
                    }
                }
            }
        },
        "/notification/{publisher}": {
            "post": {
                "description": "publish new notification with title, content, category",
                "produces": [
                    "application/json"
                ],
                "summary": "publish new notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the publisher address",
                        "name": "publisher",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the signature of the publisher",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the title of the notification",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the content of the notification",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the category of the notification: { QuotaUpdate, Weekly, Activity}",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/price_info/{coin}": {
            "get": {
                "description": "gets the Coin Price info and trend",
                "produces": [
                    "application/json"
                ],
                "summary": "get the Coin Price info and trend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "{BTC,ETH,USDT,HT,MDX}",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the price trend of coin, {trend_info:{\"rate\": ..., \"trend\": ...}}"
                    }
                }
            }
        },
        "/transaction/{address}": {
            "get": {
                "description": "gets the history transaction of specific account",
                "produces": [
                    "application/json"
                ],
                "summary": "get the transaction info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user account address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tag of the transaction-{deposit,withdraw,claimProfit}, if not specify, get all the category",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "index of page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "size of each page",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a page of transaction and the total transaction amount-{\"transaction"
                    },
                    "400": {
                        "description": "invalid params"
                    },
                    "500": {
                        "description": "server error"
                    }
                }
            }
        }
    }
}